version: '3.7'

services:
  postgresql:
    container_name: postgre_db
    image: postgres:15.2-alpine3.17
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    restart: on-failure
    networks:
      - custom

  postgresql_test:
    container_name: postgre_db_test
    image: postgres:15.2-alpine3.17
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME_TEST}
    ports:
      - "6000:5432"
    restart: on-failure
    networks:
      - custom

  redis:
    container_name: redis
    image: redis:latest
    depends_on:
      - postgresql
    env_file:
      - .env
    volumes:
      - /opt/docker/redis/etc:/usr/local/etc/redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASE=${REDIS_DATABASE}
    ports:
      - "6379:6379"
    restart: on-failure
    networks:
      - custom

  app:
    container_name: app
    image: app
    depends_on:
      - postgresql
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    restart: on-failure
    networks:
      - custom

networks:
  custom:
    driver: bridge
